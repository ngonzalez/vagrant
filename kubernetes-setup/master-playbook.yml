---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Configure docker
    lineinfile:
      path: /etc/docker/daemon.json
      line: "{ \"exec-opts\": [\"native.cgroupdriver=systemd\"] }"
      create: yes

  - name: Restart docker
    service:
      name: docker
      daemon_reload: yes
      state: restarted

  - name: Reset Kubernetes cluster
    command: kubeadm reset -f

  - name: Initialize the Kubernetes cluster
    command: kubeadm init --apiserver-advertise-address="192.168.56.10" \
                          --apiserver-cert-extra-sans="192.168.56.10" \
                          --node-name k8s-master \
                          --pod-network-cidr=192.168.0.0/16

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Create .kube folder
    file:
      path: "/home/{{ ansible_user }}/.kube"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: 0755

  - name: Copy file with owner and permissions
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "/home/{{ ansible_user }}/.kube/config"
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: 0644
      remote_src: yes

  - name: Install calico tigera operator
    become: false
    command: kubectl create -f https://docs.projectcalico.org/master/manifests/tigera-operator.yaml

  - name: Install calico custom resources
    become: false
    command: kubectl create -f https://docs.projectcalico.org/master/manifests/custom-resources.yaml

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    action: copy content="{{ join_command.stdout }}" dest="/etc/kubernetes/kubeadm-join.command"

  handlers:
    - name: docker status
      service: name=docker state=started
