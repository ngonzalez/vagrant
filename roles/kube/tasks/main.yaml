# kube
---
- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl

- name: Reset Kubernetes cluster
  command: kubeadm reset -f

- name: Initialize the Kubernetes cluster
  command: kubeadm init --apiserver-advertise-address 192.168.56.10 \
                        --apiserver-cert-extra-sans 192.168.56.10 \
                        --pod-network-cidr 10.244.0.0/16 \
                        --node-name node-1

- name: Create .kube folder
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Copy file with owner and permissions
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
    remote_src: yes

# By default, your cluster will not schedule Pods on the control-plane node for security reasons
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/
- name: Taint node
  command: kubectl taint nodes --all node-role.kubernetes.io/master-
  become: false

- name: Install the Tigera Calico operator and custom resource definitions
  command: kubectl create -f https://docs.projectcalico.org/master/manifests/tigera-operator.yaml
  become: false

- name: Install Calico by creating the necessary custom resource
  command: kubectl create -f https://docs.projectcalico.org/master/manifests/custom-resources.yaml
  become: false

- name: Create kube flannel run directory
  file:
    path: /run/flannel
    state: directory
    mode: 0755

- name: Add subnet.env
  template:
    src: subnet.env.j2
    dest: /run/flannel/subnet.env

- name: Apply kube flannel
  command: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  become: false
