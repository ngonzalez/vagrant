# admin
---
- name: Install system packages
  apt:
    name:
    - curl
    - dnsutils
    - htop
    - iputils-ping
    - jq
    - net-tools

- name: Checkout admin repository
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ admin_repository }}"
    dest: "{{ admin_path }}"
    version: main

# namespace
- name: Create k8s namespace
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f namespace/k8s.yaml

# database
- name: Create db Deployment
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/db.yaml

- name: Create db Service
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/db.yaml

# app
- name: Create data folder
  ansible.builtin.file:
    path: /data
    state: directory
    mode: 0755

- name: Change data folder ownership and permissions
  file:
    path: /data
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
  no_log: True

- name: Create storage class
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/storage-class.yaml

- name: Create persistent volume
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/persistent-volume.yaml

- name: Create persistent volume claim
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/persistent-volume-claim.yaml

- name: Create app Deployment
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/app.yaml

- name: Create app Service
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/app.yaml

- name: Create app Ingress
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f ingress/app.yaml
