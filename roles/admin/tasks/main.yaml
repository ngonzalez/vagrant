# admin
---
- name: Install system packages
  tags: admin
  apt:
    name:
    - curl
    - dnsutils
    - htop
    - iputils-ping
    - jq
    - net-tools

- name: Checkout admin repository
  tags: admin
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ admin_repository }}"
    dest: "{{ admin_path }}"
    version: main

# namespace
- name: Create k8s namespace
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f namespace/k8s.yaml

# nginx
- name: Include nginx vault vars
  include_vars:
    file: vault_nginx.yaml
  no_log: True

- name: Copy nginx self-signed cert
  copy:
    content: "{{ nginx_self_signed_crt }}"
    dest: "{{ nginx_cert_path }}"
    mode: 0644
    owner: "{{ ansible_user }}"
  no_log: True

- name: Copy nginx self-signed key
  copy:
    content: "{{ nginx_self_signed_key }}"
    dest: "{{ nginx_key_path }}"
    mode: 0644
    owner: "{{ ansible_user }}"
  no_log: True

- name: Create tls secret
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n k8s create secret tls k8s-tls-secret --key {{ nginx_key_path }} --cert {{ nginx_cert_path }}

- name: Remove nginx self-signed cert
  file:
    path: "{{ nginx_self_signed_crt }}"
    state: absent
  no_log: True

- name: Remove nginx self-signed key
  file:
    path: "{{ nginx_self_signed_key }}"
    state: absent
  no_log: True

# database
- name: Create db Deployment
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/db.yaml

- name: Create db loadbalancer
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/db.yaml

- name: Set db loadbalancer external IP
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd:  kubectl -n k8s patch svc db-loadbalancer -p '{"spec":{"externalIPs":["{{ ansible_host }}"]}}'

# app
- name: Create app Deployment
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/app.yaml

- name: Create app loadbalancer
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/app.yaml

- name: Set app loadbalancer external IP
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd:  kubectl -n k8s patch svc app-loadbalancer -p '{"spec":{"externalIPs":["{{ ansible_host }}"]}}'
