# admin
---
- name: Install system packages
  tags: admin
  apt:
    name:
    - curl
    - dnsutils
    - htop
    - iputils-ping
    - jq
    - net-tools

# git checkout
- name: Checkout admin repository
  tags: admin
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ admin_repository }}"
    dest: "{{ admin_path }}"
    version: main

# namespace
- name: Create k8s namespace
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f namespace/k8s.yaml

# persistent volumes
- name: Create data folder
  tags: data
  ansible.builtin.file:
    path: /data
    state: directory
    mode: 0755

- name: Change data folder ownership and permissions
  tags: data
  file:
    path: /data
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
  no_log: True

- name: Create storage class
  tags: data
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/storage-class.yaml

- name: Create persistent volume
  tags: data
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/persistent-volume.yaml

- name: Create persistent volume claim
  tags: data
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/persistent-volume-claim.yaml

# database
- name: Create database Deployment
  tags: database
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/database.yaml

- name: Create database loadbalancer
  tags: database
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/database.yaml

- name: Set database loadbalancer external IP
  tags: database
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd:  kubectl -n k8s patch svc database-loadbalancer -p '{"spec":{"externalIPs":["192.168.56.10"]}}'

# backend
- name: Create backend Deployment
  tags: backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/backend.yaml

- name: Create backend loadbalancer
  tags: backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/backend.yaml

- name: Set backend loadbalancer external IP
  tags: backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd:  kubectl -n k8s patch svc backend-loadbalancer -p '{"spec":{"externalIPs":["192.168.56.10"]}}'
